import React, { useState, useRef, useEffect } from 'react';
import axios from 'axios';
import ErrorAlert from "../components/ErrorAlert";
import {Grid, TextField, Button, Typography, Card, CardContent, CardHeader, Box, CssBaseline} from "@mui/material"
import SuccessAlert from '../components/SuccessAlert';
export default function File() {
    const [error, setError] = useState('');
    const [success, setSuccess] = useState('')
    const [fileName, setFileName] = useState("");
    const [fileContent, setFileContent] = useState();
    const [file, setFile] = useState(null);
    const formRef = useRef(null);
    const [formHeight, setFormHeight] = useState(0);

    useEffect(() => {
        setFormHeight(formRef.current.offsetHeight);
    }, []);

    const changeFileName = (e) => {
        setFileName(e.target.value);
    };
    const getFile = e => {
        e.preventDefault();
        if (fileName === "") {
            setFile("");
            setError("入力が空です");
            return;
        }
        if (fileName.startsWith('.') || fileName.startsWith('/')) {
            setError('ファイル名は . もしくは / で始まることはできません');
            return;
        }
    
        axios.get('/file', {params:{filename: fileName}})
            .then(res => {
                setError("");
                setFile(res.data);
                setFileContent(fileName);
            })
            .catch(error => {
                setError(error.response.data.message);
            });
            
    };
    const fileInputRef = useRef();

    const uploadButtonClick = () => {
      fileInputRef.current.click();
    };
  
    const uploadFile = (e) => {
        e.preventDefault();
        const formData = new FormData();
        formData.append('file', e.target.files[0]);
    
        axios.post('/file', formData)
        .then(res => {
            setSuccess(res.data.result)
        })
        .catch(error => {
            setError(error.response.data.message)
        })
    };

    return (
        <>
        <CssBaseline />
        <Box sx={{flexGrow: 1, height: `calc(100vh - ${formHeight}px)`, display: 'flex', flexDirection: 'column'}}>
            <Box ref={formRef}>
            <Grid item xs={12}>
            <SuccessAlert message={success} />
            <ErrorAlert message={error}/>
            <Grid container spacing={2} alignItems="center" justify="center">
            <Grid item xs={8}>
            <h2>ファイル検索</h2>
            </Grid>
            <Grid item xs={4}>
            <input
                type="file"
                style={{ display: 'none' }}
                ref={fileInputRef}
                onChange={uploadFile}
            />
            <Button variant="contained" color="primary" onClick={uploadButtonClick} fullWidth>
                アップロード
            </Button>
            </Grid>
            </Grid>
                <form onSubmit={getFile}>
                    <Grid container spacing={2} alignItems="center" justify="center">
                        <Grid item xs={8}>
                            <TextField
                                label="ファイル名"
                                variant="outlined"
                                value={fileName}
                                onChange={changeFileName}
                                fullWidth
                            />
                        </Grid>
                        <Grid item xs={4}>
                            <Button variant="contained" color="primary" type="submit" fullWidth>
                                検索
                            </Button>
                        </Grid>
                    </Grid>
                </form>
            </Grid>
            </Box>
            <Box mt={2}  sx={{flexGrow: 1, overflow: 'auto'}}>
            <Grid item xs={12} sx={{height: '100%'}}>
                {file && <Card variant="outlined" sx={{height: '100%', display: 'flex', flexDirection: 'column'}}>
                    <CardHeader title={fileContent} sx={{bgcolor: '#d3d3d3'}}/>
                    <CardContent sx={{ flexGrow: 1, maxHeight: '100%', overflow: 'auto'}}>
                    <Typography variant="body1" component="p" dangerouslySetInnerHTML={{ __html: file.replace(/\n/g, '<br>') }} />
                    </CardContent>
                </Card>}
            </Grid>
            </Box>

        </Box>
        </>
    );
}





