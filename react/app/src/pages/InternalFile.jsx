import React, {useState, useContext, useEffect, useRef} from 'react';
import AuthContext from '../middleware/AuthContext';
import { useNavigate } from 'react-router-dom';
import {Grid, Box, CssBaseline, Select, MenuItem, FormControl, InputLabel, Button, TextareaAutosize} from "@mui/material";
import ErrorAlert from '../components/ErrorAlert';
import SuccessAlert from '../components/SuccessAlert';
import axios from 'axios'; 

export default function InternalFile() {
  const [error, setError] = useState('')
  const [files, setFiles] = useState([])
  const [formHeight, setFormHeight] = useState(0)
  const [content, setContent] = useState('');
  const [previewContent, setPreviewContent] = useState('');
  const formRef = useRef(null)
  const navigate = useNavigate()
  const [selectedFile, setSelectedFile] = useState('');
  const {token} = useContext(AuthContext)
  if(token === null) {
    navigate('/login')
  }
  useEffect(() => {
    setFormHeight(formRef.current.offsetHeight);
    axios.get('/file_list').then((response) => {
      setFiles(response.data.files);
    });
  }, []);
  const handleFileChange = (e) => {
    setSelectedFile(e.target.value);
    axios.get('/get_file', { params: { file_name: e.target.value } }).then((response) => {
      setContent(response.data.content);
    });
  };
  const handleSave = () => {
    axios.post('/save_file', { file_name: selectedFile, content })
    .then(() => {
    });
  };
  const handlePreview = () => {
    setPreviewContent(content);
  };
  return (
    <>
      <CssBaseline />
      <Box sx={{flexGrow: 1, height: `calc(100vh - ${formHeight}px)`, display: 'flex', flexDirection: 'column'}}>
        <Box ref={formRef}>
          <Grid item xs={12}>
            <ErrorAlert message={error}/>
            <h2>ファイル編集</h2>
            <FormControl fullWidth>
                <InputLabel>ファイル名</InputLabel>
                <Select 
                    label="ファイル名"
                    value={selectedFile} 
                    onChange={handleFileChange}
                >
                {files.map((file) => (
                <MenuItem key={file} value={file}>
                {file}
                </MenuItem>
                ))}
              </Select>
            </FormControl>
          </Grid>
          <Box mt={2}  sx={{flexGrow: 1, overflow: 'auto'}}>
            <Grid item xs={12} sx={{height: '100%'}}>
            <TextareaAutosize
                value={content}
                onChange={(e) => setContent(e.target.value)}
                minRows={10}
                style={{ width: '100%' }}
            />
            <Button onClick={handleSave}>Save</Button>
            <Button onClick={handlePreview}>Preview</Button>
            <div dangerouslySetInnerHTML={{ __html: previewContent.replace(/\n/g, '<br>') }} />
            </Grid>
            </Box>
        </Box>
      </Box>
    </>
  )
}
